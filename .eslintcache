[{"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/index.js":"1","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/App.js":"2","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/reportWebVitals.js":"3","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/components/pages/ItemList/ItemList.js":"4","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/components/pages/ItemList/ItemCard.js":"5","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/LoginPage.js":"6","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/SignUpPage.js":"7","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/FrontPage.js":"8","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/styles/FormStyles.js":"9"},{"size":315,"mtime":1612399619000,"results":"10","hashOfConfig":"11"},{"size":1503,"mtime":1612399496000,"results":"12","hashOfConfig":"11"},{"size":402,"mtime":1612367292000,"results":"13","hashOfConfig":"11"},{"size":191,"mtime":1612367292000,"results":"14","hashOfConfig":"11"},{"size":656,"mtime":1612367292000,"results":"15","hashOfConfig":"11"},{"size":1961,"mtime":1612399855000,"results":"16","hashOfConfig":"11"},{"size":2857,"mtime":1612400533000,"results":"17","hashOfConfig":"11"},{"size":241,"mtime":1612399517000,"results":"18","hashOfConfig":"11"},{"size":966,"mtime":1612400551000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"173lu7z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/index.js",[],["42","43"],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/App.js",[],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/reportWebVitals.js",[],["44","45"],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/components/pages/ItemList/ItemList.js",[],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/components/pages/ItemList/ItemCard.js",[],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/LoginPage.js",["46"],"import { render } from '@testing-library/react';\nimport {useState} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport styled from \"styled-components\";\nimport {StyledContainer, StyledForm, StyledLabel, StyledInput, StyledLoginButton} from \"../styles/FormStyles\";\n\n\nconst StyledNewButton = styled(StyledLoginButton)`\n  width: 150px;\n`;\n\nconst LoginPage = ({setToken, history}) => {\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  function login() {\n    const formData = new FormData();\n\n    formData.append('username', username);\n    formData.append('password', password);\n\n    const requestOptions = {\n      method: 'POST',\n      /* headers: { 'Content-Type': 'application/json' }, */\n      body: formData\n    }\n    setLoading(true);\n    fetch (`${process.env.REACT_APP_BACKEND_URL}/token`, requestOptions)\n      .then((r) => {\n        return r.json();\n      })\n      .then((response) => {\n        setToken(response.access_token);\n        \n        console.log(response);\n      }).finally(() => setLoading(false))\n   }\n\n    return (\n        <StyledContainer className=\"App\">\n\n            <StyledForm>\n                <StyledLabel>Username</StyledLabel>\n                <StyledInput value={username} onChange={(e) => {setUsername(e.target.value)}}/><br/>\n                \n                <StyledLabel>Password</StyledLabel>\n                <StyledInput type='password' value={password} onChange={(e) => {setPassword(e.target.value)}}/><br/>\n                \n                <StyledLoginButton disabled={loading} type=\"button\" onClick={login}>Login</StyledLoginButton>\n                \n            </StyledForm>\n            \n            <div>\n              <StyledNewButton onClick={() => history.push('/signup')}>New User</StyledNewButton>\n            </div>\n            \n        </StyledContainer>\n\n    )\n} \n\nexport default withRouter(LoginPage);\n","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/SignUpPage.js",["47"],"import React, {useEffect, useState} from \"react\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {StyledContainer, StyledForm, StyledLabel, StyledInput, StyledLoginButton, StyledSuccessMsg} from \"../styles/FormStyles\";\r\n\r\n\r\nconst SignUpPage = ({history}) => {\r\n  const [showSuccessMsg, setShowSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (showSuccessMsg) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 3000)\r\n    }\r\n\r\n  }, [showSuccessMsg]);\r\n\r\n  async function SignUp() {\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    const data = JSON.stringify({\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: data,\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`, requestOptions)\r\n      const returnData = await response.json();\r\n      if (response.status < 200 || response.status >= 300) {\r\n        const err = new Error(returnData?.detail ?? 'Something went wrong, try again later');\r\n        err.status = response.status;\r\n        throw err;\r\n      }\r\n      setShowSuccess(true);\r\n    } catch(err) { \r\n        if (err.status === 409) {\r\n          alert('This email is already in use');\r\n        } else {\r\n          alert(err);\r\n        }\r\n    }\r\n     \r\n    setLoading(false);\r\n   \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StyledContainer>\r\n        <StyledForm>\r\n          <StyledLabel>Username</StyledLabel>\r\n          <StyledInput value={username} onChange={(e) => {setUsername(e.target.value)}}/><br/>\r\n          \r\n          <StyledLabel>Email</StyledLabel>\r\n          <StyledInput type='email' value={email} onChange={(e) => {setEmail(e.target.value)}}/><br/>\r\n          \r\n          <StyledLabel>Password</StyledLabel>\r\n          <StyledInput type='password' value={password} onChange={(e) => {setPassword(e.target.value)}}/><br/>\r\n          \r\n          <StyledLabel>Confirm Password</StyledLabel>\r\n          <StyledInput type='password' value={confirmPassword} onChange={(e) => {setConfirmPassword(e.target.value)}}/><br/>\r\n          \r\n          <StyledLoginButton disabled={loading} type=\"button\" onClick={SignUp}>Register</StyledLoginButton>\r\n        </StyledForm>\r\n        {showSuccessMsg && <StyledSuccessMsg>Success! Redirecting to login page...</StyledSuccessMsg>}\r\n      </StyledContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(SignUpPage);\r\n","/Users/iriselva/Desktop/Mod5/inventory-frontend/src/Pages/FrontPage.js",[],"/Users/iriselva/Desktop/Mod5/inventory-frontend/src/styles/FormStyles.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":21,"column":6,"nodeType":"60","endLine":21,"endColumn":22,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],["62"],["63"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [history, showSuccessMsg]",{"range":"67","text":"68"},[722,738],"[history, showSuccessMsg]"]